stages:
  - build
  - deploy
  - deploy_production

default:
  image:
    name: dtzar/helm-kubectl:$HELM_VERSION

variables:
  BRANCH_OR_TAG_NAME: $CI_COMMIT_REF_NAME
  COMMIT_SHA: $CI_COMMIT_SHA

  IMAGE_TAG_BRANCH_NAME: $CI_PROJECT_PATH:$BRANCH_OR_TAG_NAME
  IMAGE_TAG_COMMIT_SHA: $CI_PROJECT_PATH:$COMMIT_SHA

  DEPLOY_NAMESPACE_PRODUCTION: $CI_PROJECT_NAMESPACE-production


  IMAGE_TAG_REF: $CI_PROJECT_PATH:$CI_COMMIT_REF_NAME
  IMAGE_TAG_SHA: $CI_PROJECT_PATH:$CI_COMMIT_SHA
  DEPLOY_NAME: $CI_PROJECT_NAME
  DEPLOY_NAMESPACE: $CI_PROJECT_NAMESPACE-$CI_COMMIT_REF_SLUG

  API_HOST: $CI_PROJECT_NAMESPACE-$CI_COMMIT_REF_SLUG.k2.env.timo.group

validate_chart:
  stage: build
  script:
    - echo $API_HOST
    - helm repo add c2m $C2M_HELM_REPO_URL
    - helm template
      --namespace $DEPLOY_NAMESPACE
      --set ci.name="$DEPLOY_NAME"
      --set ci.namespace="$DEPLOY_NAMESPACE"
      --set ci.image="$C2M_REGISTRY/$IMAGE_TAG_SHA"
      -v 6
      -f ./helm-values.yaml
      $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PROJECT_NAMESPACE
      c2m/generic-chart
  only:
    - dev
    - master
  when: on_success


build_image:
  stage: build
  image: docker:18.09.6
  services:
    - name: docker:18.09.6-dind
      command:
        - /bin/sh
        - -c
        - |
          dockerd-entrypoint.sh || exit
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - echo $REGISTRY_PASSWORD | docker login --username c2m-docker-registry-ci $C2M_REGISTRY_PROXY --password-stdin
    - docker pull $C2M_REGISTRY_PROXY/$IMAGE_TAG_REF || true
    - docker build --build-arg API_HOST=api.$API_HOST --build-arg ROUTER_HOST=router.$API_HOST --build-arg TARGET_BRANCH=$BRANCH_OR_TAG_NAME --cache-from $C2M_REGISTRY_PROXY/$IMAGE_TAG_REF -t $C2M_REGISTRY/$IMAGE_TAG_REF -t $C2M_REGISTRY/$IMAGE_TAG_SHA .

    - echo $REGISTRY_PASSWORD | docker login --username c2m-docker-registry-ci $C2M_REGISTRY --password-stdin
    - docker push $C2M_REGISTRY/$IMAGE_TAG_REF
    - docker push $C2M_REGISTRY/$IMAGE_TAG_SHA
  only:
    - master
    - dev
  when: on_success

build_image_prod:
  stage: build
  image: docker:18.09.6
  services:
    - name: docker:18.09.6-dind
      command:
        - /bin/sh
        - -c
        - |
          dockerd-entrypoint.sh || exit
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - echo $REGISTRY_PASSWORD | docker login --username c2m-docker-registry-ci $C2M_REGISTRY_PROXY --password-stdin
    - docker pull $C2M_REGISTRY_PROXY/$IMAGE_TAG_REF || true
    - docker build --build-arg API_HOST=api2.click2.money --build-arg ROUTER_HOST=cmtrckr.net --build-arg TARGET_BRANCH=production --cache-from $C2M_REGISTRY_PROXY/$IMAGE_TAG_REF -t $C2M_REGISTRY/$IMAGE_TAG_REF -t $C2M_REGISTRY/$IMAGE_TAG_SHA .

    - echo $REGISTRY_PASSWORD | docker login --username c2m-docker-registry-ci $C2M_REGISTRY --password-stdin
    - docker push $C2M_REGISTRY/$IMAGE_TAG_REF
    - docker push $C2M_REGISTRY/$IMAGE_TAG_SHA
  only:
    - production
  when: on_success

deploy:
  stage: deploy
  environment:
    name: $CI_COMMIT_REF_NAME
    url: http://$CI_PROJECT_NAME.$CI_PROJECT_NAMESPACE-$CI_COMMIT_REF_SLUG.k2.env.timo.group
    on_stop: destroy_deployment
  before_script:
    - mkdir /tmp/kube2
    - echo $KUBECONFIG_II | base64 -d > /tmp/kube2/config
  script:
    - helm repo add c2m $C2M_HELM_REPO_URL
    - helm upgrade
      --kubeconfig /tmp/kube2/config
      --namespace $DEPLOY_NAMESPACE
      --install
      --atomic
      --wait
      --timeout 80s
      --set ci.name="$DEPLOY_NAME"
      --set ci.namespace="$DEPLOY_NAMESPACE"
      --set ci.image="$C2M_REGISTRY/$IMAGE_TAG_SHA"
      -v 6
      -f ./helm-values.yaml
      $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PROJECT_NAMESPACE
      c2m/generic-chart
  only:
    - dev
  when: on_success


deploy_master:
  stage: deploy
  environment:
    name: $CI_COMMIT_REF_NAME
    url: http://$CI_PROJECT_NAME.$CI_PROJECT_NAMESPACE-$CI_COMMIT_REF_SLUG.k2.env.timo.group
    on_stop: destroy_deployment
  before_script:
    - mkdir /tmp/kube2
    - echo $KUBECONFIG_II | base64 -d > /tmp/kube2/config
  script:
    - helm repo add c2m $C2M_HELM_REPO_URL
    - helm upgrade
      --kubeconfig /tmp/kube2/config
      --namespace $DEPLOY_NAMESPACE
      --install
      --atomic
      --wait
      --timeout 80s
      --set ci.name="$DEPLOY_NAME"
      --set ci.namespace="$DEPLOY_NAMESPACE"
      --set ci.image="$C2M_REGISTRY/$IMAGE_TAG_SHA"
      -v 6
      -f ./helm-values.yaml
      -f ./helm-values-master.yaml
      $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PROJECT_NAMESPACE
      c2m/generic-chart
  only:
    - master
  when: on_success


deploy_production:
  stage: deploy_production
  environment:
    name: production
  before_script:
    - mkdir /tmp/kube2
    - echo $KUBECONFIG_II | base64 -d > /tmp/kube2/config
  script:
    - helm repo add c2m $C2M_HELM_REPO_URL
    - helm upgrade
      --kubeconfig /tmp/kube2/config
      --namespace $DEPLOY_NAMESPACE_PRODUCTION
      --install
      --atomic
      --wait
      --timeout 80s
      --set ci.name="$DEPLOY_NAME"
      --set ci.namespace="$DEPLOY_NAMESPACE_PRODUCTION"
      --set ci.image="$C2M_REGISTRY/$IMAGE_TAG_SHA"
      -v 6
      -f ./helm-values.yaml
      -f ./helm-values-production.yaml
      $CI_PROJECT_NAME-production-$CI_PROJECT_NAMESPACE
      c2m/generic-chart
  only:
    - production
  when: manual



destroy_deployment:
  stage: deploy
  environment:
    name: $CI_COMMIT_REF_NAME
    action: stop
  before_script:
    - mkdir /tmp/kube2
    - echo $KUBECONFIG_II | base64 -d > /tmp/kube2/config
  script:
    - helm repo add c2m $C2M_HELM_REPO_URL
    - helm delete
      --purge
      --kubeconfig /tmp/kube2/config
      $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_PROJECT_NAMESPACE
  when: manual
